{
    "contractName": "BasicVotingTokenZepplin",
    "abi": [
        {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "subtractedValue",
                    "type": "uint256"
                }
            ],
            "name": "decreaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "addedValue",
                    "type": "uint256"
                }
            ],
            "name": "increaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "potentialVoter",
                    "type": "address"
                }
            ],
            "name": "isNewVoter",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "mint",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "requestToken",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"potentialVoter\",\"type\":\"address\"}],\"name\":\"isNewVoter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Dropbox/allSaves/smartContracts/blockchain-voting-mechanism-main/contracts/VotingCoin.sol\":\"BasicVotingTokenZepplin\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Dropbox/allSaves/smartContracts/blockchain-voting-mechanism-main/contracts/VotingCoin.sol\":{\"keccak256\":\"0xa177fef1014e3079807f990ebc97a7e8e54dd0cc226e05f3d97b1d49ce1b5045\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b77e4db39bcdf56410ea20dda7ac31948e6a8369281c7704df20ab2e4a915eff\",\"dweb:/ipfs/QmYnAVHDg2s4BKhiA98KVAxBkWQarVWwZQtuM3Y7bjmGcz\"]},\"c:/Dropbox/allSaves/smartContracts/blockchain-voting-mechanism-main/lib/Context.sol\":{\"keccak256\":\"0x9d2116cec9510917510556030345cef268f45fdb85048119a1001dd5657d9749\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5222deb852a1c7a2811c4899b1bb6dcc0e78a1af0b57073f520ab94bdee548c7\",\"dweb:/ipfs/QmTMuDpxmGUaPVERCMTEQrsYJEM75jdip9WLXNRkqVsGcW\"]},\"c:/Dropbox/allSaves/smartContracts/blockchain-voting-mechanism-main/lib/ERC20.sol\":{\"keccak256\":\"0xdf793469aa81023dd74569fc47fc468c004e2df63c89e9b89481d1ba69b3ca98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df448de4ed88371a8e9e0e95404bbc7a2fe4fb25ec665c5826eb1a3f8972e6de\",\"dweb:/ipfs/QmTP7nEC1qJY6Qqxt3yd5LMBum2VGFefAaKm2FwCwTNEMY\"]},\"c:/Dropbox/allSaves/smartContracts/blockchain-voting-mechanism-main/lib/IERC20.sol\":{\"keccak256\":\"0xa426add89e9b4785ddeeb07b4d9352b57de8b4cb314c8cb8f0d5898938bd8de9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09852a830ad29d33cfdf74e7035853c68e43e1a8c242b25db9d656a074a54e6d\",\"dweb:/ipfs/QmeRSfQwWr3vyP2uJxnjybtPYLMiD17E51d4eMhXQh93R1\"]},\"c:/Dropbox/allSaves/smartContracts/blockchain-voting-mechanism-main/lib/IERC20Metadata.sol\":{\"keccak256\":\"0xe9f37eff86b1f6eb4f2939465d4eb9d2e95d1fac70005544cf0e03687617a68e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a98abf415a6ce17d43cec6912333de753641c3cd1ccafc1fbbc7ad55fe920650\",\"dweb:/ipfs/QmeAKTipgYmWYF8NXvvAZM7FdEVGFQDNgse75rvvhTZFLQ\"]}},\"version\":1}",
    "bytecode": "608060405234801561001057600080fd5b506040518060400160405280601781526020017f4261736963566f74696e67546f6b656e5a6570706c696e000000000000000000815250604051806040016040528060038152602001624d544b60e81b8152508160039080519060200190610079929190610095565b50805161008d906004906020840190610095565b505050610169565b8280546100a19061012e565b90600052602060002090601f0160209004810192826100c35760008555610109565b82601f106100dc57805160ff1916838001178555610109565b82800160010185558215610109579182015b828111156101095782518255916020019190600101906100ee565b50610115929150610119565b5090565b5b80821115610115576000815560010161011a565b600181811c9082168061014257607f821691505b6020821081141561016357634e487b7160e01b600052602260045260246000fd5b50919050565b610ad4806101786000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80634d7ec6281161008c57806395d89b411161006657806395d89b41146101d0578063a457c2d7146101d8578063a9059cbb146101eb578063dd62ed3e146101fe57600080fd5b80634d7ec6281461018c57806370a0823114610194578063746697ce146101bd57600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce56714610155578063395093511461016457806340c10f191461017757600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f7610211565b60405161010491906108d8565b60405180910390f35b61012061011b366004610949565b6102a3565b6040519015158152602001610104565b6002545b604051908152602001610104565b610120610150366004610973565b6102bb565b60405160128152602001610104565b610120610172366004610949565b6102df565b61018a610185366004610949565b610301565b005b61018a61030f565b6101346101a23660046109af565b6001600160a01b031660009081526020819052604090205490565b6101206101cb3660046109af565b6103b0565b6100f7610414565b6101206101e6366004610949565b610423565b6101206101f9366004610949565b61049e565b61013461020c3660046109d1565b6104ac565b60606003805461022090610a04565b80601f016020809104026020016040519081016040528092919081815260200182805461024c90610a04565b80156102995780601f1061026e57610100808354040283529160200191610299565b820191906000526020600020905b81548152906001019060200180831161027c57829003601f168201915b5050505050905090565b6000336102b18185856104d7565b5060019392505050565b6000336102c98582856105fb565b6102d4858585610675565b506001949350505050565b6000336102b18185856102f283836104ac565b6102fc9190610a55565b6104d7565b61030b8282610819565b5050565b610318336103b0565b15156001146103615760405162461bcd60e51b815260206004820152601060248201526f63616e277420766f746520747769636560801b60448201526064015b60405180910390fd5b6005805460018101825560008290527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b031916339081179091556103ae91610819565b565b6000805b60055481101561040b57600581815481106103d1576103d1610a6d565b6000918252602090912001546001600160a01b03848116911614156103f95750600092915050565b8061040381610a83565b9150506103b4565b50600192915050565b60606004805461022090610a04565b6000338161043182866104ac565b9050838110156104915760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610358565b6102d482868684036104d7565b6000336102b1818585610675565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166105395760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610358565b6001600160a01b03821661059a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610358565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061060784846104ac565b9050600019811461066f57818110156106625760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610358565b61066f84848484036104d7565b50505050565b6001600160a01b0383166106d95760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610358565b6001600160a01b03821661073b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610358565b6001600160a01b038316600090815260208190526040902054818110156107b35760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610358565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361066f565b6001600160a01b03821661086f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610358565b80600260008282546108819190610a55565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b81811015610905578581018301518582016040015282016108e9565b81811115610917576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461094457600080fd5b919050565b6000806040838503121561095c57600080fd5b6109658361092d565b946020939093013593505050565b60008060006060848603121561098857600080fd5b6109918461092d565b925061099f6020850161092d565b9150604084013590509250925092565b6000602082840312156109c157600080fd5b6109ca8261092d565b9392505050565b600080604083850312156109e457600080fd5b6109ed8361092d565b91506109fb6020840161092d565b90509250929050565b600181811c90821680610a1857607f821691505b60208210811415610a3957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610a6857610a68610a3f565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610a9757610a97610a3f565b506001019056fea26469706673582212201078c6b92df8a3a42d0df560bc5f89441c22e0da08460d7ba346606589adcb4164736f6c634300080a0033",
    "deployedBytecode": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c80634d7ec6281161008c57806395d89b411161006657806395d89b41146101d0578063a457c2d7146101d8578063a9059cbb146101eb578063dd62ed3e146101fe57600080fd5b80634d7ec6281461018c57806370a0823114610194578063746697ce146101bd57600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce56714610155578063395093511461016457806340c10f191461017757600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f7610211565b60405161010491906108d8565b60405180910390f35b61012061011b366004610949565b6102a3565b6040519015158152602001610104565b6002545b604051908152602001610104565b610120610150366004610973565b6102bb565b60405160128152602001610104565b610120610172366004610949565b6102df565b61018a610185366004610949565b610301565b005b61018a61030f565b6101346101a23660046109af565b6001600160a01b031660009081526020819052604090205490565b6101206101cb3660046109af565b6103b0565b6100f7610414565b6101206101e6366004610949565b610423565b6101206101f9366004610949565b61049e565b61013461020c3660046109d1565b6104ac565b60606003805461022090610a04565b80601f016020809104026020016040519081016040528092919081815260200182805461024c90610a04565b80156102995780601f1061026e57610100808354040283529160200191610299565b820191906000526020600020905b81548152906001019060200180831161027c57829003601f168201915b5050505050905090565b6000336102b18185856104d7565b5060019392505050565b6000336102c98582856105fb565b6102d4858585610675565b506001949350505050565b6000336102b18185856102f283836104ac565b6102fc9190610a55565b6104d7565b61030b8282610819565b5050565b610318336103b0565b15156001146103615760405162461bcd60e51b815260206004820152601060248201526f63616e277420766f746520747769636560801b60448201526064015b60405180910390fd5b6005805460018101825560008290527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b031916339081179091556103ae91610819565b565b6000805b60055481101561040b57600581815481106103d1576103d1610a6d565b6000918252602090912001546001600160a01b03848116911614156103f95750600092915050565b8061040381610a83565b9150506103b4565b50600192915050565b60606004805461022090610a04565b6000338161043182866104ac565b9050838110156104915760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610358565b6102d482868684036104d7565b6000336102b1818585610675565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166105395760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610358565b6001600160a01b03821661059a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610358565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061060784846104ac565b9050600019811461066f57818110156106625760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610358565b61066f84848484036104d7565b50505050565b6001600160a01b0383166106d95760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610358565b6001600160a01b03821661073b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610358565b6001600160a01b038316600090815260208190526040902054818110156107b35760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610358565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361066f565b6001600160a01b03821661086f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610358565b80600260008282546108819190610a55565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b81811015610905578581018301518582016040015282016108e9565b81811115610917576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461094457600080fd5b919050565b6000806040838503121561095c57600080fd5b6109658361092d565b946020939093013593505050565b60008060006060848603121561098857600080fd5b6109918461092d565b925061099f6020850161092d565b9150604084013590509250925092565b6000602082840312156109c157600080fd5b6109ca8261092d565b9392505050565b600080604083850312156109e457600080fd5b6109ed8361092d565b91506109fb6020840161092d565b90509250929050565b600181811c90821680610a1857607f821691505b60208210811415610a3957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610a6857610a68610a3f565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610a9757610a97610a3f565b506001019056fea26469706673582212201078c6b92df8a3a42d0df560bc5f89441c22e0da08460d7ba346606589adcb4164736f6c634300080a0033",
    "sourceMap": "91:683:0:-:0;;;164:56;;;;;;;;;;2013:116:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2013:116:2;;;2088:5;2080;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2104:17:2;;;;:7;;:17;;;;;:::i;:::-;;2013:116;;91:683:0;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;91:683:0;;;-1:-1:-1;91:683:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:5;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;91:683:0;;;;;;",
    "deployedSourceMap": "91:683:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2199:100:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4559:201;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:5;;1211:22;1193:41;;1181:2;1166:18;4559:201:2;1053:187:5;3328:108:2;3416:12;;3328:108;;;1391:25:5;;;1379:2;1364:18;3328:108:2;1245:177:5;5340:261:2;;;;;;:::i;:::-;;:::i;3170:93::-;;;3253:2;1902:36:5;;1890:2;1875:18;3170:93:2;1760:184:5;6010:238:2;;;;;;:::i;:::-;;:::i;686:85:0:-;;;;;;:::i;:::-;;:::i;:::-;;228:180;;;:::i;3499:127:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3600:18:2;3573:7;3600:18;;;;;;;;;;;;3499:127;420:259:0;;;;;;:::i;:::-;;:::i;2418:104:2:-;;;:::i;6751:436::-;;;;;;:::i;:::-;;:::i;3832:193::-;;;;;;:::i;:::-;;:::i;4088:151::-;;;;;;:::i;:::-;;:::i;2199:100::-;2253:13;2286:5;2279:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2199:100;:::o;4559:201::-;4642:4;737:10:1;4698:32:2;737:10:1;4714:7:2;4723:6;4698:8;:32::i;:::-;-1:-1:-1;4748:4:2;;4559:201;-1:-1:-1;;;4559:201:2:o;5340:261::-;5437:4;737:10:1;5495:38:2;5511:4;737:10:1;5526:6:2;5495:15;:38::i;:::-;5544:27;5554:4;5560:2;5564:6;5544:9;:27::i;:::-;-1:-1:-1;5589:4:2;;5340:261;-1:-1:-1;;;;5340:261:2:o;6010:238::-;6098:4;737:10:1;6154:64:2;737:10:1;6170:7:2;6207:10;6179:25;737:10:1;6170:7:2;6179:9;:25::i;:::-;:38;;;;:::i;:::-;6154:8;:64::i;686:85:0:-;746:17;752:2;756:6;746:5;:17::i;:::-;686:85;;:::o;228:180::-;278:22;289:10;278;:22::i;:::-;:30;;304:4;278:30;270:58;;;;-1:-1:-1;;;270:58:0;;3257:2:5;270:58:0;;;3239:21:5;3296:2;3276:18;;;3269:30;-1:-1:-1;;;3315:18:5;;;3308:46;3371:18;;270:58:0;;;;;;;;;339:8;:25;;;;;;;-1:-1:-1;339:25:0;;;;;;;-1:-1:-1;;;;;;339:25:0;353:10;339:25;;;;;;375:19;;:5;:19::i;:::-;228:180::o;420:259::-;485:4;;503:147;523:8;:15;518:21;;503:147;;;580:8;589:1;580:11;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;562:29:0;;;580:11;;562:29;559:80;;;-1:-1:-1;618:5:0;;420:259;-1:-1:-1;;420:259:0:o;559:80::-;540:3;;;;:::i;:::-;;;;503:147;;;-1:-1:-1;667:4:0;;420:259;-1:-1:-1;;420:259:0:o;2418:104:2:-;2474:13;2507:7;2500:14;;;;;:::i;6751:436::-;6844:4;737:10:1;6844:4:2;6927:25;737:10:1;6944:7:2;6927:9;:25::i;:::-;6900:52;;6991:15;6971:16;:35;;6963:85;;;;-1:-1:-1;;;6963:85:2;;3874:2:5;6963:85:2;;;3856:21:5;3913:2;3893:18;;;3886:30;3952:34;3932:18;;;3925:62;-1:-1:-1;;;4003:18:5;;;3996:35;4048:19;;6963:85:2;3672:401:5;6963:85:2;7084:60;7093:5;7100:7;7128:15;7109:16;:34;7084:8;:60::i;3832:193::-;3911:4;737:10:1;3967:28:2;737:10:1;3984:2:2;3988:6;3967:9;:28::i;4088:151::-;-1:-1:-1;;;;;4204:18:2;;;4177:7;4204:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4088:151::o;10744:346::-;-1:-1:-1;;;;;10846:19:2;;10838:68;;;;-1:-1:-1;;;10838:68:2;;4280:2:5;10838:68:2;;;4262:21:5;4319:2;4299:18;;;4292:30;4358:34;4338:18;;;4331:62;-1:-1:-1;;;4409:18:5;;;4402:34;4453:19;;10838:68:2;4078:400:5;10838:68:2;-1:-1:-1;;;;;10925:21:2;;10917:68;;;;-1:-1:-1;;;10917:68:2;;4685:2:5;10917:68:2;;;4667:21:5;4724:2;4704:18;;;4697:30;4763:34;4743:18;;;4736:62;-1:-1:-1;;;4814:18:5;;;4807:32;4856:19;;10917:68:2;4483:398:5;10917:68:2;-1:-1:-1;;;;;10998:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11050:32;;1391:25:5;;;11050:32:2;;1364:18:5;11050:32:2;;;;;;;10744:346;;;:::o;11381:419::-;11482:24;11509:25;11519:5;11526:7;11509:9;:25::i;:::-;11482:52;;-1:-1:-1;;11549:16:2;:37;11545:248;;11631:6;11611:16;:26;;11603:68;;;;-1:-1:-1;;;11603:68:2;;5088:2:5;11603:68:2;;;5070:21:5;5127:2;5107:18;;;5100:30;5166:31;5146:18;;;5139:59;5215:18;;11603:68:2;4886:353:5;11603:68:2;11715:51;11724:5;11731:7;11759:6;11740:16;:25;11715:8;:51::i;:::-;11471:329;11381:419;;;:::o;7657:806::-;-1:-1:-1;;;;;7754:18:2;;7746:68;;;;-1:-1:-1;;;7746:68:2;;5446:2:5;7746:68:2;;;5428:21:5;5485:2;5465:18;;;5458:30;5524:34;5504:18;;;5497:62;-1:-1:-1;;;5575:18:5;;;5568:35;5620:19;;7746:68:2;5244:401:5;7746:68:2;-1:-1:-1;;;;;7833:16:2;;7825:64;;;;-1:-1:-1;;;7825:64:2;;5852:2:5;7825:64:2;;;5834:21:5;5891:2;5871:18;;;5864:30;5930:34;5910:18;;;5903:62;-1:-1:-1;;;5981:18:5;;;5974:33;6024:19;;7825:64:2;5650:399:5;7825:64:2;-1:-1:-1;;;;;7975:15:2;;7953:19;7975:15;;;;;;;;;;;8009:21;;;;8001:72;;;;-1:-1:-1;;;8001:72:2;;6256:2:5;8001:72:2;;;6238:21:5;6295:2;6275:18;;;6268:30;6334:34;6314:18;;;6307:62;-1:-1:-1;;;6385:18:5;;;6378:36;6431:19;;8001:72:2;6054:402:5;8001:72:2;-1:-1:-1;;;;;8109:15:2;;;:9;:15;;;;;;;;;;;8127:20;;;8109:38;;8327:13;;;;;;;;;;:23;;;;;;8379:26;;1391:25:5;;;8327:13:2;;8379:26;;1364:18:5;8379:26:2;;;;;;;8418:37;12400:91;8750:548;-1:-1:-1;;;;;8834:21:2;;8826:65;;;;-1:-1:-1;;;8826:65:2;;6663:2:5;8826:65:2;;;6645:21:5;6702:2;6682:18;;;6675:30;6741:33;6721:18;;;6714:61;6792:18;;8826:65:2;6461:355:5;8826:65:2;8982:6;8966:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9137:18:2;;:9;:18;;;;;;;;;;;:28;;;;;;9192:37;1391:25:5;;;9192:37:2;;1364:18:5;9192:37:2;;;;;;;686:85:0;;:::o;14:597:5:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:5;574:15;-1:-1:-1;;570:29:5;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:5:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:5;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:5:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:5:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;2790:127::-;2851:10;2846:3;2842:20;2839:1;2832:31;2882:4;2879:1;2872:15;2906:4;2903:1;2896:15;2922:128;2962:3;2993:1;2989:6;2986:1;2983:13;2980:39;;;2999:18;;:::i;:::-;-1:-1:-1;3035:9:5;;2922:128::o;3400:127::-;3461:10;3456:3;3452:20;3449:1;3442:31;3492:4;3489:1;3482:15;3516:4;3513:1;3506:15;3532:135;3571:3;-1:-1:-1;;3592:17:5;;3589:43;;;3612:18;;:::i;:::-;-1:-1:-1;3659:1:5;3648:13;;3532:135::o",
    "sourcePath": "c:/Dropbox/allSaves/smartContracts/blockchain-voting-mechanism-main/contracts/VotingCoin.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.10+commit.fc410830"
    },
    "ast": {
        "absolutePath": "c:/Dropbox/allSaves/smartContracts/blockchain-voting-mechanism-main/contracts/VotingCoin.sol",
        "exportedSymbols": {
            "BasicVotingTokenZepplin": [
                89
            ],
            "Context": [
                111
            ],
            "ERC20": [
                698
            ],
            "IERC20": [
                776
            ],
            "IERC20Metadata": [
                801
            ]
        },
        "id": 90,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".10"
                ],
                "nodeType": "PragmaDirective",
                "src": "35:24:0"
            },
            {
                "absolutePath": "c:/Dropbox/allSaves/smartContracts/blockchain-voting-mechanism-main/lib/ERC20.sol",
                "file": "../lib/ERC20.sol",
                "id": 2,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 90,
                "sourceUnit": 699,
                "src": "63:26:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 3,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 698,
                            "src": "127:5:0"
                        },
                        "id": 4,
                        "nodeType": "InheritanceSpecifier",
                        "src": "127:5:0"
                    }
                ],
                "canonicalName": "BasicVotingTokenZepplin",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 89,
                "linearizedBaseContracts": [
                    89,
                    698,
                    801,
                    776,
                    111
                ],
                "name": "BasicVotingTokenZepplin",
                "nameLocation": "100:23:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "id": 7,
                        "mutability": "mutable",
                        "name": "hasVoted",
                        "nameLocation": "149:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 89,
                        "src": "139:18:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[]"
                        },
                        "typeName": {
                            "baseType": {
                                "id": 5,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "139:7:0",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                }
                            },
                            "id": 6,
                            "nodeType": "ArrayTypeName",
                            "src": "139:9:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 14,
                            "nodeType": "Block",
                            "src": "218:2:0",
                            "statements": []
                        },
                        "id": 15,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "hexValue": "4261736963566f74696e67546f6b656e5a6570706c696e",
                                        "id": 10,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "184:25:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_17dc61a4ed48b180a7cde9bb22e6edec64900c268d7f31abef2cfbe1945871cc",
                                            "typeString": "literal_string \"BasicVotingTokenZepplin\""
                                        },
                                        "value": "BasicVotingTokenZepplin"
                                    },
                                    {
                                        "hexValue": "4d544b",
                                        "id": 11,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "211:5:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
                                            "typeString": "literal_string \"MTK\""
                                        },
                                        "value": "MTK"
                                    }
                                ],
                                "id": 12,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 9,
                                    "name": "ERC20",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 698,
                                    "src": "178:5:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "178:39:0"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 8,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "175:2:0"
                        },
                        "returnParameters": {
                            "id": 13,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "218:0:0"
                        },
                        "scope": 89,
                        "src": "164:56:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 41,
                            "nodeType": "Block",
                            "src": "259:149:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "id": 24,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "arguments": [
                                                        {
                                                            "expression": {
                                                                "id": 20,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967281,
                                                                "src": "289:3:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 21,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "289:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        ],
                                                        "id": 19,
                                                        "name": "isNewVoter",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 75,
                                                        "src": "278:10:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                                            "typeString": "function (address) view returns (bool)"
                                                        }
                                                    },
                                                    "id": 22,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "278:22:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "hexValue": "74727565",
                                                    "id": 23,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "304:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "true"
                                                },
                                                "src": "278:30:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "63616e277420766f7465207477696365",
                                                "id": 25,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "309:18:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_96e8f787f6de44e7362bbb6a9d4f067b03ee96abad092e43ee4d148a90e0d413",
                                                    "typeString": "literal_string \"can't vote twice\""
                                                },
                                                "value": "can't vote twice"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_96e8f787f6de44e7362bbb6a9d4f067b03ee96abad092e43ee4d148a90e0d413",
                                                    "typeString": "literal_string \"can't vote twice\""
                                                }
                                            ],
                                            "id": 18,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "270:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 26,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "270:58:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 27,
                                    "nodeType": "ExpressionStatement",
                                    "src": "270:58:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 31,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "353:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 32,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "353:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "expression": {
                                                "id": 28,
                                                "name": "hasVoted",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 7,
                                                "src": "339:8:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                    "typeString": "address[] storage ref"
                                                }
                                            },
                                            "id": 30,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "push",
                                            "nodeType": "MemberAccess",
                                            "src": "339:13:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                                "typeString": "function (address[] storage pointer,address)"
                                            }
                                        },
                                        "id": 33,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "339:25:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 34,
                                    "nodeType": "ExpressionStatement",
                                    "src": "339:25:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 36,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "381:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 37,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "381:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "hexValue": "35",
                                                "id": 38,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "392:1:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_5_by_1",
                                                    "typeString": "int_const 5"
                                                },
                                                "value": "5"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_rational_5_by_1",
                                                    "typeString": "int_const 5"
                                                }
                                            ],
                                            "id": 35,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 515,
                                            "src": "375:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 39,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "375:19:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 40,
                                    "nodeType": "ExpressionStatement",
                                    "src": "375:19:0"
                                }
                            ]
                        },
                        "functionSelector": "4d7ec628",
                        "id": 42,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "requestToken",
                        "nameLocation": "237:12:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 16,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "249:2:0"
                        },
                        "returnParameters": {
                            "id": 17,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "259:0:0"
                        },
                        "scope": 89,
                        "src": "228:180:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 74,
                            "nodeType": "Block",
                            "src": "490:189:0",
                            "statements": [
                                {
                                    "body": {
                                        "id": 70,
                                        "nodeType": "Block",
                                        "src": "544:106:0",
                                        "statements": [
                                            {
                                                "condition": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    },
                                                    "id": 65,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "id": 61,
                                                        "name": "potentialVoter",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 44,
                                                        "src": "562:14:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "==",
                                                    "rightExpression": {
                                                        "baseExpression": {
                                                            "id": 62,
                                                            "name": "hasVoted",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 7,
                                                            "src": "580:8:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                                "typeString": "address[] storage ref"
                                                            }
                                                        },
                                                        "id": 64,
                                                        "indexExpression": {
                                                            "id": 63,
                                                            "name": "i",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 50,
                                                            "src": "589:1:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "580:11:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "src": "562:29:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "id": 69,
                                                "nodeType": "IfStatement",
                                                "src": "559:80:0",
                                                "trueBody": {
                                                    "id": 68,
                                                    "nodeType": "Block",
                                                    "src": "592:47:0",
                                                    "statements": [
                                                        {
                                                            "expression": {
                                                                "hexValue": "66616c7365",
                                                                "id": 66,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "bool",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "618:5:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                },
                                                                "value": "false"
                                                            },
                                                            "functionReturnParameters": 48,
                                                            "id": 67,
                                                            "nodeType": "Return",
                                                            "src": "611:12:0"
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 57,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 53,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 50,
                                            "src": "518:1:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                            "components": [
                                                {
                                                    "expression": {
                                                        "id": 54,
                                                        "name": "hasVoted",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 7,
                                                        "src": "523:8:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                            "typeString": "address[] storage ref"
                                                        }
                                                    },
                                                    "id": 55,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "length",
                                                    "nodeType": "MemberAccess",
                                                    "src": "523:15:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                }
                                            ],
                                            "id": 56,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "522:17:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "518:21:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 71,
                                    "initializationExpression": {
                                        "assignments": [
                                            50
                                        ],
                                        "declarations": [
                                            {
                                                "constant": false,
                                                "id": 50,
                                                "mutability": "mutable",
                                                "name": "i",
                                                "nameLocation": "512:1:0",
                                                "nodeType": "VariableDeclaration",
                                                "scope": 71,
                                                "src": "507:6:0",
                                                "stateVariable": false,
                                                "storageLocation": "default",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "typeName": {
                                                    "id": 49,
                                                    "name": "uint",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "507:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "visibility": "internal"
                                            }
                                        ],
                                        "id": 52,
                                        "initialValue": {
                                            "hexValue": "30",
                                            "id": 51,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "515:1:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "nodeType": "VariableDeclarationStatement",
                                        "src": "507:9:0"
                                    },
                                    "loopExpression": {
                                        "expression": {
                                            "id": 59,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "UnaryOperation",
                                            "operator": "++",
                                            "prefix": false,
                                            "src": "540:3:0",
                                            "subExpression": {
                                                "id": 58,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 50,
                                                "src": "540:1:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "id": 60,
                                        "nodeType": "ExpressionStatement",
                                        "src": "540:3:0"
                                    },
                                    "nodeType": "ForStatement",
                                    "src": "503:147:0"
                                },
                                {
                                    "expression": {
                                        "hexValue": "74727565",
                                        "id": 72,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "667:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "value": "true"
                                    },
                                    "functionReturnParameters": 48,
                                    "id": 73,
                                    "nodeType": "Return",
                                    "src": "660:11:0"
                                }
                            ]
                        },
                        "functionSelector": "746697ce",
                        "id": 75,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "isNewVoter",
                        "nameLocation": "429:10:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 45,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 44,
                                    "mutability": "mutable",
                                    "name": "potentialVoter",
                                    "nameLocation": "448:14:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 75,
                                    "src": "440:22:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 43,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "440:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "439:24:0"
                        },
                        "returnParameters": {
                            "id": 48,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 47,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 75,
                                    "src": "485:4:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 46,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "485:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "484:6:0"
                        },
                        "scope": 89,
                        "src": "420:259:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 87,
                            "nodeType": "Block",
                            "src": "735:36:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 83,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 77,
                                                "src": "752:2:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 84,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 79,
                                                "src": "756:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 82,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 515,
                                            "src": "746:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 85,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "746:17:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 86,
                                    "nodeType": "ExpressionStatement",
                                    "src": "746:17:0"
                                }
                            ]
                        },
                        "functionSelector": "40c10f19",
                        "id": 88,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "mint",
                        "nameLocation": "695:4:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 80,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 77,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "708:2:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 88,
                                    "src": "700:10:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 76,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "700:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 79,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "720:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 88,
                                    "src": "712:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 78,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "712:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "699:28:0"
                        },
                        "returnParameters": {
                            "id": 81,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "735:0:0"
                        },
                        "scope": 89,
                        "src": "686:85:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 90,
                "src": "91:683:0",
                "usedErrors": []
            }
        ],
        "src": "35:1127:0"
    },
    "functionHashes": {
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "decimals()": "313ce567",
        "decreaseAllowance(address,uint256)": "a457c2d7",
        "increaseAllowance(address,uint256)": "39509351",
        "isNewVoter(address)": "746697ce",
        "mint(address,uint256)": "40c10f19",
        "name()": "06fdde03",
        "requestToken()": "4d7ec628",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "554400",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "allowance(address,address)": "infinite",
            "approve(address,uint256)": "24647",
            "balanceOf(address)": "2585",
            "decimals()": "222",
            "decreaseAllowance(address,uint256)": "26994",
            "increaseAllowance(address,uint256)": "27045",
            "isNewVoter(address)": "infinite",
            "mint(address,uint256)": "50889",
            "name()": "infinite",
            "requestToken()": "infinite",
            "symbol()": "infinite",
            "totalSupply()": "2349",
            "transfer(address,uint256)": "51112",
            "transferFrom(address,address,uint256)": "infinite"
        }
    }
}